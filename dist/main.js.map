{"version":3,"file":"main.js","mappings":"qCAAO,MAAMA,EAASC,SAASC,eAAe,UACjCC,EAAMH,EAAOI,WAAW,MCE/BC,EAAS,CACXC,EAAG,IACHC,EAAG,IACHC,OAAQ,GACRC,GAAI,EAEJC,KAAM,UCLJC,EAASV,SAASC,eAAe,QD+BhC,IAAmBU,IC7Bf,ICNJ,MACHC,YAAYF,GACRG,KAAKH,OAASA,EACdG,KAAKC,OAAS,KACdD,KAAKE,MAAQ,EACbF,KAAKG,IAAM,EACXH,KAAKI,SAAW,EAEhBJ,KAAKH,OAAOQ,iBAAiB,YAAaL,KAAKM,YAAYC,KAAKP,OAChEA,KAAKH,OAAOQ,iBAAiB,UAAWL,KAAKQ,UAAUD,KAAKP,MAChE,CAEDM,cACCN,KAAKE,MAAQO,KAAKC,KAClB,CAEAF,YACIR,KAAKG,IAAMM,KAAKC,MAChBV,KAAKI,SAAWJ,KAAKG,IAAMH,KAAKE,MAEhCS,QAAQC,IAAI,UAAUZ,KAAKE,OAC3BS,QAAQC,IAAI,QAAQZ,KAAKG,KACzBQ,QAAQC,IAAI,aAAcZ,KAAKI,UAE/BJ,KAAKC,OAASD,KAAKI,QAEvB,GDpBkBP,GAIPI,OD8CXY,aApBA,WDhCAxB,EAAIyB,UAAU,EAAG,EAAG5B,EAAO6B,MAAO7B,EAAO8B,QCS7C,WAGI,MAAMC,EAAW5B,EAAI6B,qBAAqB3B,EAAOC,EAAED,EAAOE,EAAE,GAAGF,EAAOC,EAAED,EAAOE,EAAG,KAClFwB,EAASE,aAAa,EAAG,SACzBF,EAASE,aAAa,IAAM,QAC5BF,EAASE,aAAa,GAAK,SAC3BF,EAASE,aAAa,EAAG,QAEzB9B,EAAI+B,YACJ/B,EAAIgC,IAAI9B,EAAOC,EAAED,EAAOE,EAAEF,EAAOG,OAAO,EAAU,EAAR4B,KAAKC,IAG/ClC,EAAImC,UAAYP,EAChB5B,EAAIoC,OAEJpC,EAAIqC,KAAO,aACXrC,EAAIsC,UAAY,SAChBtC,EAAIuC,SAASrC,EAAOK,KAAM,IAAK,IACnC,CAMQiC,GAEAtC,EAAOG,QAAUH,EAAOI,GAGpBJ,EAAOG,QAAU,MAEjBH,EAAOI,KAAO,EACdJ,EAAOK,KAAO,UAGdL,EAAOG,QAAU,KAEjBH,EAAOI,KAAO,EACdJ,EAAOK,KAAO,SAEtB,GAEiBE,EAAK,I","sources":["webpack://breath-first-search/./src/scripts/canvas.js","webpack://breath-first-search/./src/scripts/circle.js","webpack://breath-first-search/./src/index.js","webpack://breath-first-search/./src/scripts/timing.js"],"sourcesContent":["export const canvas = document.getElementById(\"canvas\");\nexport const ctx = canvas.getContext(\"2d\");\n\nexport function clearCanvas() {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n}","import {clearCanvas, ctx} from \"./canvas.js\";\nimport { Timing } from \"./timing.js\";\n\nconst circle = {\n    x: 300,\n    y: 300,\n    radius: 80,\n    dr: 1,\n    // change in radius\n    text: \"INHALE\"\n}\n\n    \nfunction drawCircle(){\n    // ctx.globalAlpha = 0.9\n    \n    const gradient = ctx.createRadialGradient(circle.x,circle.y,20,circle.x,circle.y, 250)\n    gradient.addColorStop(0, \"black\");\n    gradient.addColorStop(0.25, \"aqua\");\n    gradient.addColorStop(0.5, \"white\");\n    gradient.addColorStop(1, \"navy\");\n    \n    ctx.beginPath();\n    ctx.arc(circle.x,circle.y,circle.radius,0,Math.PI*2);\n    // ctx.stroke();\n    \n    ctx.fillStyle = gradient;\n    ctx.fill()\n    \n    ctx.font = '20px serif';\n    ctx.textAlign = 'center';\n    ctx.fillText(circle.text, 300, 600);\n}\n\n\nexport function breathing(time) {\n    function draw(){\n        clearCanvas();\n        drawCircle();\n\n        circle.radius += circle.dr;\n        // change size\n\n        if (circle.radius >= 280) {\n            //change radius direction and text\n            circle.dr *= -1;\n            circle.text = \"EXHALE\"\n        }\n\n        if (circle.radius <= 80) {\n            //change radius direction and text\n            circle.dr *= -1;\n            circle.text = \"INHALE\"\n        }\n    }\n    \n    setInterval(draw,time/200)\n    // divide time by # of frames in a full cycle\n}\n\n\n\n","\nimport { breathing} from \"./scripts/circle.js\";\nimport {Timing} from \"./scripts/timing.js\";\n\nconst button = document.getElementById(\"hold\");\n\nlet time = new Timing(button);\n//default time is 2800ms\n\n\nbreathing(time.inhale)\n\n\n\n\n\n\n\n\n\n\n","export class Timing {\n    constructor(button){\n        this.button = button;\n        this.inhale = 2800;\n        this.start = 0;\n        this.end = 0;\n        this.duration = 0;\n   \n        this.button.addEventListener(\"mousedown\", this.onmousedown.bind(this));\n        this.button.addEventListener(\"mouseup\", this.onmouseup.bind(this))\n    }\n\n   onmousedown() {\n    this.start = Date.now();\n    };\n\n    onmouseup() {\n        this.end = Date.now();\n        this.duration = this.end - this.start;\n\n        console.log(\"start: \",this.start)\n        console.log(\"end: \",this.end)\n        console.log(\"duration: \",(this.duration))\n        \n        this.inhale = this.duration\n        \n    };\n}\n\n\n  "],"names":["canvas","document","getElementById","ctx","getContext","circle","x","y","radius","dr","text","button","time","constructor","this","inhale","start","end","duration","addEventListener","onmousedown","bind","onmouseup","Date","now","console","log","setInterval","clearRect","width","height","gradient","createRadialGradient","addColorStop","beginPath","arc","Math","PI","fillStyle","fill","font","textAlign","fillText","drawCircle"],"sourceRoot":""}